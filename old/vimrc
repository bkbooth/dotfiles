" GENERAL SETTINGS
" Options ref: http://vimdoc.sourceforge.net/htmldoc/options.html
set nocompatible
"set backspace=indent,eol,start
"set ruler
set number
"set showcmd
"set incsearch
"set hlsearch
set mouse=a
let mapleader=","
"/ GENERAL SETTINGS

" VUNDLE
filetype off

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" other plugins
Plugin 'tpope/vim-sensible'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-fugitive'
Plugin 'airblade/vim-gitgutter'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'altercation/vim-colors-solarized'
"Plugin 'vim-airline/vim-airline'
"Plugin 'vim-airline/vim-airline-themes'
Plugin 'itchyny/lightline.vim'
Plugin 'scrooloose/nerdcommenter'
Plugin 'scrooloose/nerdtree'
Plugin 'jistr/vim-nerdtree-tabs'
Plugin 'vim-syntastic/syntastic'
Plugin 'editorconfig/editorconfig-vim'

" language/syntax plugins
Plugin 'tpope/vim-git'
Plugin 'moll/vim-node'
Plugin 'pangloss/vim-javascript', { 'branch': 'develop' }
Plugin 'othree/html5.vim'
Plugin 'leshill/vim-json'
Plugin 'tpope/vim-markdown'
Plugin 'mustache/vim-mustache-handlebars'
Plugin 'mxw/vim-jsx'
Plugin 'ElmCast/elm-vim'
Plugin 'leafgarland/typescript-vim'
Plugin 'peitalin/vim-jsx-typescript', { 'for': 'typescript' }
Plugin 'Quramy/tsuquyomi', { 'for': 'typescript' }

call vundle#end()
filetype plugin indent on
"/ VUNDLE

" STYLE
syntax on
set background=dark
colorscheme solarized
hi clear SignColumn

" use ripgrep
if executable('rg')
  set grepprg=rg\ --color=never
  let g:ctrlp_user_command = 'rg %s --files --color=never --glob ""'
  let g:ctrlp_use_caching = 0

  set grepprg=rg\ --vimgrep\ --no-heading\ --smart-case
  set grepformat=%f:%l:%c:%m,%f:%l:%m
  let g:ackprg = 'rg --vimgrep --no-heading --smart-case'
endif

" vim-airline
"set laststatus=2
"let g:airline_powerline_fonts=1
"let g:airline_detect_paste=1
"let g:airline#extensions#tabline#enabled=1
"let g:airline_theme='solarized'

" lightline.vim
set laststatus=2
let g:lightline = {
  \ 'colorscheme': 'solarized',
  \ 'active': {
  \   'left': [
  \     [ 'mode', 'paste' ],
  \     [ 'readonly', 'relativepath', 'modified' ],
  \   ],
  \ },
  \ }

" vim-gitgutter
" In vim-airline, only display "hunks" if the diff is non-zero
let g:airline#extensions#hunks#non_zero_only=1

" vim-nerdtree
nmap <silent> <leader>t :NERDTreeTabsToggle<CR>
"let g:nerdtree_tabs_open_on_console_startup=1
let g:NERDTreeHijackNetrw = 0
let NERDTreeIgnore=['\~$', 'node_modules$[[dir]]', 'bower_components$[[dir]]', 'public$[[dir]]', 'tmp$[[dir]]', 'dist$[[dir]]']

" ctrlp.vim
let g:ctrlp_custom_ignore = {
  \ 'dir': '\.git$\|\.hg$\|\.svn$\|\.yardoc\|public\/images\|public\/system\|data\|log\|tmp\|vendor/bundled$'
  \ }

" syntastic
let g:syntastic_error_symbol = '✘'
let g:syntastic_warning_symbol = "▲"
augroup mySyntastic
  au!
  au FileType tex let b:syntastic_mode = "passive"
augroup END
"/ STYLE

" FORMATTING
" default to 2 spaces
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set autoindent

" per-filetype overrides
autocmd FileType markdown setlocal shiftwidth=4 softtabstop=4 tabstop=4 wrap linebreak nolist wrap lbr colorcolumn=0 synmaxcol=999999
autocmd Filetype elm setlocal tabstop=4 shiftwidth=4 softtabstop=4 expandtab
"/ FORMATTING

" MAPPINGS
" Use ; for : in normal and visual mode, less keystrokes
nnoremap ; :
vnoremap ; :
" Select block
nnoremap <leader>v v%
" Escape visual mode easily
inoremap jj <Esc>
" Use ripgrep for search
nnoremap \ :Rg<SPACE>

" Easier window moving and resizing
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l
nnoremap <Leader>h :vertical resize -1<CR>
nnoremap <Leader>l :vertical resize +1<CR>
nnoremap <Leader>j :resize +1<CR>
nnoremap <Leader>k :resize -1<CR>

" Simple access to GitHub and blame
map <Leader>g :Gbrowse<CR>
map <Leader>b :Gblame<CR>
"/ MAPPINGS
